version: '3.8'
services:

  mongodb:
    image: mongo:latest
    ports:
      - '27018:27017'
    volumes:
      - "./db:/docker-entrypoint-initdb.d"
    networks:
      - develop-network

  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    ports:
      - "10000:10000"
    command: "azurite --blobHost 0.0.0.0 --inMemoryPersistence"
    environment:
      - AZURITE_ACCOUNTS=devstoreaccount1:Eby8vdM02xNOcqFlqUwJPLlmEtlCD9I1QhZT4gRjAAHEDPazjFIwtg==
    networks:
      - develop-network

  azure-cli:
    build:
      context: "."
      dockerfile: "Dockerfile-azure-cli"
    depends_on:
      - azurite
    networks:
      - develop-network
    volumes:
      - "./blobStorageInit/initAzurite.sh:/initAzurite.sh"
      - "./blobStorageInit/products.json:/workspace/products.json"
    environment:
      - SELFCARE_INFRA_PRIVATE_ENV=dev
      - GITHUB_TOKEN=${GITHUB_TOKEN}

  mockserver:
    image: mockserver/mockserver
    ports:
      - '1080:1080'
    environment:
      - MOCKSERVER_INITIALIZATION_JSON_PATH=/config/*.json
      - MOCKSERVER_ENABLE_CORS_FOR_API="true"
      - MOCKSERVER_ENABLE_CORS_FOR_ALL_RESPONSES="true"
    volumes:
      - "./mock:/config"
    networks:
      - develop-network

#  userms:
#    build:
#      context: "../../../../../."
#      dockerfile: "apps/user-ms/Dockerfile"
#      args:
#        - REPO_ONBOARDING=selfcare-onboarding
#        - REPO_USERNAME=${REPO_USERNAME}
#        - REPO_PASSWORD=${REPO_PASSWORD}
#    ports:
#      - '8080:8080'
#    env_file:
#      - testenv
#    networks:
#      - develop-network
#    depends_on:
#      - mongodb
#      - mockserver
#      - azurite
#      - azure-cli

#  userms:
#    build:
#      context: "../../../."
#      dockerfile: "src/test/resources/Dockerfile-user-ms"
#    ports:
#      - '8080:8080'
#    env_file:
#      - testenv
#    networks:
#      - develop-network
#    depends_on:
#      - mongodb
#      - mockserver
#      - azurite
#      - azure-cli

networks:
  develop-network:
    name: selfcare-develop-network

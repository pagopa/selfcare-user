version: '3.8'
services:

  mongodb:
    image: mongo:latest
    ports:
      - '27018:27017'
    volumes:
      - "./src/test/resources/db:/docker-entrypoint-initdb.d"
    networks:
      - develop-network

  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    container_name: azurite
    ports:
      - "10000:10000"
    command: "azurite --blobHost 0.0.0.0 --inMemoryPersistence"
    environment:
      - AZURITE_ACCOUNTS=devstoreaccount1:Eby8vdM02xNOcqFlqUwJPLlmEtlCD9I1QhZT4gRjAAHEDPazjFIwtg==
    networks:
      - develop-network

  azure-cli:
    build:
      context: "../../."
      dockerfile: "apps/user-ms/src/test/resources/Dockerfile-azure-cli"
    container_name: azure-cli
    depends_on:
      - azurite
    networks:
      - develop-network
    volumes:
      - "./src/test/resources/blobStorageInit/initAzurite.sh:/initAzurite.sh"
    environment:
      - SELFCARE_INFRA_PRIVATE_ENV=dev
      - GITHUB_TOKEN=REPLACE_WITH_TOKEN

  mockserver:
    image: mockserver/mockserver
    ports:
      - '1080:1080'
    environment:
      - MOCKSERVER_INITIALIZATION_JSON_PATH=/config/*.json
      - MOCKSERVER_ENABLE_CORS_FOR_API="true"
      - MOCKSERVER_ENABLE_CORS_FOR_ALL_RESPONSES="true"
    volumes:
      - "./src/test/resources/mock:/config"
    networks:
      - develop-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - 2181:2181
    networks:
      - develop-network

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    networks:
      - develop-network
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  notification-service:
    build: "./src/test/resources/eventHubSubstitute"
    depends_on:
      - kafka
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "8087:8087"
    networks:
      - develop-network

  init-kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - kafka
      - zookeeper
    networks:
      - develop-network
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:9092 --list
      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists  --replication-factor 1 --partitions 1 --topic sc-users
      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:9092 --list
      "

networks:
  develop-network:
    name: selfcare-develop-network
